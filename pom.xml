<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.6</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>ai.turintech.model-catalog</groupId>
    <artifactId>model-catalog-parent</artifactId>
    <version>1.0.0-a0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>model-catalog-parent</name>
    <description>Parent module for the model-catalog microservice</description>

	<properties>
		<spring-boot.version>3.1.4</spring-boot.version>
		<springdoc-openapi-starter-webflux-api.version>2.2.0</springdoc-openapi-starter-webflux-api.version>
		<springdoc-openapi-starter-webflux-ui.version>2.2.0</springdoc-openapi-starter-webflux-ui.version>
		<springdoc-openapi-common.version>1.7.0</springdoc-openapi-common.version>
		<maven.version>3.2.5</maven.version>
		<java.version>17</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<liquibase-plugin.driver />
		<liquibase-plugin.hibernate-dialect />
		<liquibase-plugin.password />
		<liquibase-plugin.url />
		<liquibase-plugin.username />
		<liquibase.version>4.24.0</liquibase.version>
		<sentry.version>7.9.0</sentry.version>
		<spring-cloud.version>2022.0.4</spring-cloud.version>
		<org.mapstruct.version>1.5.5.Final</org.mapstruct.version>
		<m2e.apt.activation>jdt_apt</m2e.apt.activation>
		<hibernate-jpa-2.1-api.version>1.0.2.Final</hibernate-jpa-2.1-api.version>
		<hibernate-envers.version>6.3.1.Final</hibernate-envers.version>
		<hibernate-core.version>6.3.1.Final</hibernate-core.version>
		<com.vladmihalcea.hybernate-types-60.version>2.21.1</com.vladmihalcea.hybernate-types-60.version>
		<fmt-maven-plugin.version>2.9</fmt-maven-plugin.version>
        <jackson-databind.version>2.15.2</jackson-databind.version>
        <classgraph.version>4.8.138</classgraph.version>
		<testcontainers.version>1.15.1</testcontainers.version>
		<graphql-jpa-query.version>1.2.0</graphql-jpa-query.version>
		<mockito.version>5.8.0</mockito.version>
		<spring-graphql.version>1.2.4</spring-graphql.version>
		<h2.version>2.2.220</h2.version>
		<!-- Components -->
		<jpa-search.version>01.00.00-a2-SNAPSHOT</jpa-search.version>
		<common-data.version>01.00.00-a2-SNAPSHOT</common-data.version>
		<mapper.version>01.00.00-a2-SNAPSHOT</mapper.version>
		<architecture.version>01.00.00-a2-SNAPSHOT</architecture.version>


        <!-- Additional props copied from jhipster pom.xml -->
        <jaxb-runtime.version>4.0.3</jaxb-runtime.version>
        <checkstyle.version>10.12.4</checkstyle.version>
        <jib-maven-plugin.version>3.4.0</jib-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.10</jacoco-maven-plugin.version>
        <maven-checkstyle-plugin.version>3.3.0</maven-checkstyle-plugin.version>
        <maven-clean-plugin.version>3.3.1</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <maven-eclipse-plugin.version>2.1</maven-eclipse-plugin.version>
        <maven-enforcer-plugin.version>3.4.1</maven-enforcer-plugin.version>
        <maven-failsafe-plugin.version>3.1.2</maven-failsafe-plugin.version>
        <maven-idea-plugin.version>2.2.1</maven-idea-plugin.version>
        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
        <maven-javadoc-plugin.version>3.6.0</maven-javadoc-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <maven-site-plugin.version>3.12.1</maven-site-plugin.version>
        <maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
        <maven-war-plugin.version>3.4.0</maven-war-plugin.version>
        <micrometer-context-propagation.version>1.0.6</micrometer-context-propagation.version>
        <modernizer-maven-plugin.version>2.7.0</modernizer-maven-plugin.version>
        <nohttp-checkstyle.version>0.0.11</nohttp-checkstyle.version>
        <openapi-generator-maven-plugin.version>7.0.1</openapi-generator-maven-plugin.version>
        <profile.api-docs/>
        <properties-maven-plugin.version>1.2.0</properties-maven-plugin.version>
        <sonar-maven-plugin.version>3.10.0.2594</sonar-maven-plugin.version>
        <spotless-maven-plugin.version>2.40.0</spotless-maven-plugin.version>
        <validation-api.version>3.0.2</validation-api.version>
        <lifecycle-mapping.version>1.0.0</lifecycle-mapping.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.sentry</groupId>
                <artifactId>sentry-spring-boot-starter-jakarta</artifactId>
                <version>${sentry.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.orm</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.orm</groupId>
                <artifactId>hibernate-envers</artifactId>
                <version>${hibernate-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vladmihalcea</groupId>
                <artifactId>hibernate-types-60</artifactId>
                <version>${com.vladmihalcea.hybernate-types-60.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${org.mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webflux-api</artifactId>
                <version>${springdoc-openapi-starter-webflux-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
                <version>${springdoc-openapi-starter-webflux-ui.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-common</artifactId>
                <version>${springdoc-openapi-common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.introproventures</groupId>
                <artifactId>graphql-jpa-query-boot-starter</artifactId>
                <version>${graphql-jpa-query.version}</version>
            </dependency>

			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>postgresql</artifactId>
				<version>${testcontainers.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>junit-jupiter</artifactId>
				<version>${testcontainers.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version> <!-- Use the latest version available -->
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.graphql</groupId>
				<artifactId>spring-graphql-test</artifactId>
				<version>${spring-graphql.version}</version>
				<scope>test</scope>
			</dependency>
            <!-- Internal project dependency management -->
            <!-- Internal project modules -->
            <dependency>
                <groupId>ai.turintech.model-catalog</groupId>
                <artifactId>model-catalog-api</artifactId>
                <version>1.0.0-a0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>ai.turintech.model-catalog</groupId>
                <artifactId>model-catalog-rest</artifactId>
                <version>1.0.0-a0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>ai.turintech.model-catalog</groupId>
                <artifactId>model-catalog-service</artifactId>
                <version>1.0.0-a0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>ai.turintech.model-catalog</groupId>
                <artifactId>model-catalog-dto</artifactId>
                <version>1.0.0-a0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>ai.turintech.model-catalog</groupId>
                <artifactId>model-catalog-repository</artifactId>
                <version>1.0.0-a0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>ai.turintech.model-catalog</groupId>
                <artifactId>model-catalog-dto-entity-mapper</artifactId>
                <version>1.0.0-a0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>ai.turintech.model-catalog</groupId>
                <artifactId>model-catalog-entity</artifactId>
                <version>1.0.0-a0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>ai.turintech.model-catalog</groupId>
                <artifactId>model-catalog-to</artifactId>
                <version>1.0.0-a0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>ai.turintech.model-catalog</groupId>
                <artifactId>model-catalog-facade</artifactId>
                <version>1.0.0-a0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>ai.turintech.model-catalog</groupId>
                <artifactId>model-catalog-to-dto-mapper</artifactId>
                <version>1.0.0-a0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>ai.turintech.model-catalog</groupId>
                <artifactId>model-catalog-migration-file-creator</artifactId>
                <version>1.0.0-a0-SNAPSHOT</version>
            </dependency>

            <!-- Turintech components -->
            <dependency>
                <groupId>ai.turintech.components</groupId>
                <artifactId>jpa-search</artifactId>
                <version>${jpa-search.version}</version>
            </dependency>
            <dependency>
                <groupId>ai.turintech.components</groupId>
                <artifactId>common-data</artifactId>
                <version>${common-data.version}</version>
            </dependency>
            <dependency>
                <groupId>ai.turintech.components</groupId>
                <artifactId>mapper</artifactId>
                <version>${mapper.version}</version>
            </dependency>
            <dependency>
                <groupId>ai.turintech.components</groupId>
                <artifactId>architecture-parent</artifactId>
                <version>${architecture.version}</version>
            </dependency>
            <dependency>
                <groupId>ai.turintech.components</groupId>
                <artifactId>architecture-api</artifactId>
                <version>${architecture.version}</version>
            </dependency>
            <dependency>
                <groupId>ai.turintech.components</groupId>
                <artifactId>architecture-facade</artifactId>
                <version>${architecture.version}</version>
            </dependency>
            <dependency>
                <groupId>ai.turintech.components</groupId>
                <artifactId>architecture-service</artifactId>
                <version>${architecture.version}</version>
            </dependency>
            <dependency>
                <groupId>ai.turintech.components</groupId>
                <artifactId>architecture-rest</artifactId>
                <version>${architecture.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>MAVEN_CENTRAL</id>
            <name>Maven Repository Switchboard</name>
            <url>https://repo1.maven.org/maven2/</url>
        </repository>
        <repository>
            <id>dataspartan-turintech-maven-releases</id>
            <url>https://nexus.dataspartan.com/repository/maven-releases/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>dataspartan-turintech-maven-snapshots</id>
            <url>https://nexus.dataspartan.com/repository/maven-snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <build>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.coveo</groupId>
                <artifactId>fmt-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.gaul</groupId>
                <artifactId>modernizer-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-idea-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>verify-binding</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>report-aggregate</goal>
                            </goals>
                            <configuration>
                                <dataFileIncludes>
                                    <dataFileInclude>**/jacoco.exec</dataFileInclude>
                                </dataFileIncludes>
                                <outputDirectory>
                                    ${project.reporting.outputDirectory}/jacoco-aggregate
                                </outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <id>package-binding</id>
                            <phase>package</phase>
                            <goals>
                                <goal>report-aggregate</goal>
                            </goals>
                            <configuration>
                                <dataFileIncludes>
                                    <dataFileInclude>**/jacoco.exec</dataFileInclude>
                                </dataFileIncludes>
                                <outputDirectory>
                                    ${project.reporting.outputDirectory}/jacoco-aggregate
                                </outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <id>pre-unit-tests</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <!-- Ensures that the code coverage report for unit tests is created
                                after unit tests have been run -->
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>pre-integration-tests</id>
                            <goals>
                                <goal>prepare-agent-integration</goal>
                            </goals>
                        </execution>
                        <execution>
                            <!-- Ensures that the code coverage report for integration tests is
                                created after integration tests have been run -->
                            <id>post-integration-tests</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report-integration</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.coveo</groupId>
                    <artifactId>fmt-maven-plugin</artifactId>
                    <version>${fmt-maven-plugin.version}</version>
                    <configuration>
                        <sourceDirectory>src/main/java</sourceDirectory>
                        <testSourceDirectory>src/test/java</testSourceDirectory>
                        <verbose>false</verbose>
                        <filesNamePattern>.*\.java</filesNamePattern>
                        <skip>false</skip>
                        <skipSortingImports>false</skipSortingImports>
                        <style>google</style>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>io.spring.nohttp</groupId>
                            <artifactId>nohttp-checkstyle</artifactId>
                            <version>${nohttp-checkstyle.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <configLocation>checkstyle.xml</configLocation>
                        <includes>pom.xml,README.md</includes>
                        <excludes>.git/**/*,target/**/*,node_modules/**/*,node/**/*</excludes>
                        <sourceDirectories>./</sourceDirectories>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>io.github.git-commit-id</groupId>
                    <artifactId>git-commit-id-maven-plugin</artifactId>
                    <version>${git-commit-id-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <failOnNoGitDirectory>false</failOnNoGitDirectory>
                        <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <includeOnlyProperties>
                            <includeOnlyProperty>^git.commit.id.abbrev$</includeOnlyProperty>
                            <includeOnlyProperty>^git.commit.id.describe$</includeOnlyProperty>
                            <includeOnlyProperty>^git.branch$</includeOnlyProperty>
                        </includeOnlyProperties>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.gaul</groupId>
                    <artifactId>modernizer-maven-plugin</artifactId>
                    <version>${modernizer-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>modernizer</id>
                            <phase>package</phase>
                            <goals>
                                <goal>modernizer</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <javaVersion>${java.version}</javaVersion>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-idea-plugin</artifactId>
                    <version>${maven-idea-plugin.version}</version>
                    <configuration>
                        <exclude>node_modules</exclude>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>default-resources</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/classes</outputDirectory>
                                <useDefaultDelimiters>false</useDefaultDelimiters>
                                <delimiters>
                                    <delimiter>#</delimiter>
                                </delimiters>
                                <resources>
                                    <resource>
                                        <directory>src/main/resources/</directory>
                                        <filtering>true</filtering>
                                        <includes>
                                            <include>config/*.yml</include>
                                        </includes>
                                    </resource>
                                    <resource>
                                        <directory>src/main/resources/</directory>
                                        <filtering>false</filtering>
                                        <excludes>
                                            <exclude>config/*.yml</exclude>
                                        </excludes>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <!-- Plugin that provides API-first development using openapi-generator-cli
                        to generate Spring-MVC endpoint stubs at compile time from an OpenAPI definition
                        file -->
                    <groupId>org.openapitools</groupId>
                    <artifactId>openapi-generator-maven-plugin</artifactId>
                    <version>${openapi-generator-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                            <configuration>
                                <inputSpec>${project.basedir}/src/main/resources/swagger/api.yml</inputSpec>
                                <generatorName>spring</generatorName>
                                <apiPackage>ai.turintech.modelcatalog.rest</apiPackage>
                                <modelPackage>ai.turintech.modelcatalog.to</modelPackage>
                                <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
                                <skipValidateSpec>false</skipValidateSpec>
                                <configOptions>
                                    <reactive>true</reactive>
                                    <delegatePattern>true</delegatePattern>
                                    <title>model-catalog</title>
                                    <useSpringBoot3>true</useSpringBoot3>
                                </configOptions>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <version>${properties-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>initialize</phase>
                            <goals>
                                <goal>read-project-properties</goal>
                            </goals>
                            <configuration>
                                <files>
                                    <file>sonar-project.properties</file>
                                </files>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <configuration>
                        <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                        <runOrder>alphabetical</runOrder>
                        <includes>
                            <include>**/*IT*</include>
                            <include>**/*IntTest*</include>
                        </includes>
                        <argLine>@{argLine} -XX:+AllowRedefinitionToAddDeleteMethods
                            -Dspring.profiles.active=${profile.test}
                        </argLine>
                    </configuration>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify</id>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <runOrder>alphabetical</runOrder>
                        <excludes>
                            <exclude>**/*IT*</exclude>
                            <exclude>**/*IntTest*</exclude>
                        </excludes>
                        <argLine>@{argLine} -XX:+AllowRedefinitionToAddDeleteMethods</argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <finalName>${project.artifactId}</finalName>
                        <mainClass>${start-class}</mainClass>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>default-war</id>
                            <goals>
                                <goal>war</goal>
                            </goals>
                            <phase>package</phase>
                        </execution>
                    </executions>
                    <configuration>
                        <warSourceIncludes>WEB-INF/**,META-INF/**</warSourceIncludes>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.liquibase</groupId>
                    <artifactId>liquibase-maven-plugin</artifactId>
                    <version>${liquibase.version}</version>
                    <configuration>
                        <changeLogFile>config/liquibase/master.xml</changeLogFile>
                        <searchPath>model-catalog-entity/src/main/resources</searchPath>
                        <driver>${liquibase-plugin.driver}</driver>
                        <url>${liquibase-plugin.url}</url>
                        <defaultSchemaName/>
                        <username>${liquibase-plugin.username}</username>
                        <password>${liquibase-plugin.password}</password>
                        <verbose>true</verbose>
                        <logging>debug</logging>
                        <contexts>v0.1</contexts>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.liquibase</groupId>
                            <artifactId>liquibase-core</artifactId>
                            <version>${liquibase.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.liquibase.ext</groupId>
                            <artifactId>liquibase-hibernate6</artifactId>
                            <version>${liquibase.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-starter-data-jpa</artifactId>
                            <version>${spring-boot.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>jakarta.validation</groupId>
                            <artifactId>jakarta.validation-api</artifactId>
                            <version>${validation-api.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>api-docs</id>
            <properties>
                <profile.api-docs>,api-docs</profile.api-docs>
            </properties>
        </profile>
        <profile>
            <id>local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <spring.profiles.active>local</spring.profiles.active>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <spring.profiles.active>dev,sentry</spring.profiles.active>
                <liquibase-plugin.driver>org.postgresql.Driver</liquibase-plugin.driver>
                <liquibase-plugin.hibernate-dialect>org.hibernate.dialect.PostgreSQLDialect
                </liquibase-plugin.hibernate-dialect>
                <liquibase-plugin.password>secret</liquibase-plugin.password>
                <liquibase-plugin.username>myuser</liquibase-plugin.username>
                <liquibase-plugin.url>jdbc:postgresql://model-catalog-postgres:5432/mydatabase</liquibase-plugin.url>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-devtools</artifactId>
                    <optional>true</optional>
                </dependency>
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <testExcludes>
                                <testExclude>ai/turintech/catalog/config/PostgreSqlTestContainer.java</testExclude>
                            </testExcludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- This is automatically activated when working in Eclipse -->
            <id>eclipse</id>
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <!-- The following dependency is added due to issue #9175 -->
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-undertow</artifactId>
                </dependency>
            </dependencies>
            <build>
                <pluginManagement>
                    <plugins>
                        <!-- This plugin's configuration is used to store Eclipse m2e settings
                            only. It has no influence on the Maven build itself. Remove when the m2e
                            plugin can correctly bind to Maven lifecycle -->
                        <plugin>
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <version>${lifecycle-mapping.version}</version>
                            <configuration>
                                <lifecycleMappingMetadata>
                                    <pluginExecutions>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.jacoco</groupId>
                                                <artifactId>jacoco-maven-plugin</artifactId>
                                                <versionRange>${jacoco-maven-plugin.version}</versionRange>
                                                <goals>
                                                    <goal>prepare-agent</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore/>
                                            </action>
                                        </pluginExecution>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.openapitools</groupId>
                                                <artifactId>openapi-generator-maven-plugin</artifactId>
                                                <versionRange>${openapi-generator-maven-plugin.version}</versionRange>
                                                <goals>
                                                    <goal>generate</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore/>
                                            </action>
                                        </pluginExecution>
                                    </pluginExecutions>
                                </lifecycleMappingMetadata>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <version>${maven-javadoc-plugin.version}</version>
                            <configuration>
                                <source>${maven.compiler.source}</source>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-compiler-plugin</artifactId>
                            <version>${maven-compiler-plugin.version}</version>
                            <configuration>
                                <source>${java.version}</source>
                                <target>${java.version}</target>
                                <annotationProcessorPaths>
                                    <path>
                                        <groupId>org.springframework.boot</groupId>
                                        <artifactId>spring-boot-configuration-processor</artifactId>
                                        <version>${spring-boot.version}</version>
                                    </path>
                                    <path>
                                        <groupId>org.mapstruct</groupId>
                                        <artifactId>mapstruct-processor</artifactId>
                                        <version>${org.mapstruct.version}</version>
                                    </path>
                                    <path>
                                        <groupId>org.glassfish.jaxb</groupId>
                                        <artifactId>jaxb-runtime</artifactId>
                                        <version>${jaxb-runtime.version}</version>
                                    </path>
                                </annotationProcessorPaths>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <spring.profiles.active>prod,sentry</spring.profiles.active>
                <liquibase-plugin.driver>org.postgresql.Driver</liquibase-plugin.driver>
                <liquibase-plugin.hibernate-dialect>org.hibernate.dialect.PostgreSQLDialect
                </liquibase-plugin.hibernate-dialect>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-clean-plugin</artifactId>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>target/classes/static/</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build-info</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.github.git-commit-id</groupId>
                        <artifactId>git-commit-id-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <!-- Profile for tracing requests with Zipkin. -->
            <id>zipkin</id>
            <dependencies>
                <dependency>
                    <groupId>io.micrometer</groupId>
                    <artifactId>micrometer-tracing</artifactId>
                </dependency>
                <dependency>
                    <groupId>io.micrometer</groupId>
                    <artifactId>micrometer-tracing-bridge-brave</artifactId>
                </dependency>
                <dependency>
                    <groupId>io.zipkin.reporter2</groupId>
                    <artifactId>zipkin-reporter-brave</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>sentry</id>
            <properties>
                <profile.sentry>,sentry</profile.sentry>
            </properties>
        </profile>
    </profiles>
    <modules>
        <!-- Interfaces for all relevant layers -->
        <module>model-catalog-api</module>
        <!-- Transfer object layer -->
        <module>model-catalog-to</module>
        <!-- Rest API layer -->
        <module>model-catalog-rest</module>
        <!-- Mapping layer between TOs and DTOs and biceversa -->
        <module>model-catalog-to-dto-mapper</module>
        <!-- Data transfer object layer -->
        <module>model-catalog-dto</module>
        <!-- Facade layer -->
        <module>model-catalog-facade</module>
        <!-- Service layer -->
        <module>model-catalog-service</module>
        <!-- Mapping layer between DTOs and Entities and vicebersa -->
        <module>model-catalog-dto-entity-mapper</module>
        <!-- Entity layer -->
        <module>model-catalog-entity</module>
        <!-- Repository layer -->
        <module>model-catalog-repository</module>
        <!-- Utility module for jacoco coverate report aggregation -->
        <module>jacoco-coverage-aggregate-report</module>
        <!-- Utility module for migration file creation -->
        <module>model-catalog-migration-file-creator</module>
    </modules>

</project>
